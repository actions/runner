name: Runner CI

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - releases/*
    paths-ignore:
    - '**.md'
  pull_request:
    branches:
    - '**'
    paths-ignore:
    - '**.md'

jobs:
  build:
    strategy:
      matrix:
        runtime: [ linux-s390x, linux-ppc64le, linux-x64, linux-arm64 ]
        include:

        - runtime: linux-x64
          runs_on: amd64

        - runtime: linux-arm64
          runs_on: arm64

        - runtime: linux-ppc64le
          runs_on: ppc64le
          patch_tag: ppc64le

        - runtime: linux-s390x
          runs_on: s390x
          patch_tag: s390x

    runs-on: [ self-hosted, noble, "${{ matrix.runs_on }}" ]
    steps:
    - uses: actions/checkout@v4

    - name: Install DotNet SDK
      run: sudo apt-get update && sudo apt-get install -y dotnet-sdk-8.0

    - name: Apply patches
      if: matrix.runtime == 'linux-s390x' || matrix.runtime == 'linux-ppc64le'
      run: |
        git apply patches/runner-main-sdk8-${{ matrix.patch_tag }}.patch

    - name: Update DotNet required version pin
      run: |
        sed -i "s/$( cat src/global.json | jq -r '.sdk.version' )/8.0/" src/global.json

    # Build runner layout
    - name: Build & Layout Release
      run: |
        ./dev.sh layout Release ${{ matrix.runtime }}
      working-directory: src

    # Run tests
    - name: L0
      run: |
        ./dev.sh test
      working-directory: src
      if: matrix.runtime == 'arm64' || matrix.runtime == 'amd64'

    # Create runner package tar.gz/zip
    - name: Package Release
      if: github.event_name != 'pull_request'
      run: |
        ./dev.sh package Release ${{ matrix.runtime }}
      working-directory: src

    - name: Test package
      if: github.event_name != 'pull_request'
      run: |
        mkdir package_test
        tar -xvzf ../_package/*.tar.gz -C package_test
        ./package_test/config.sh --version
      working-directory: src
        

    # Upload runner package tar.gz/zip as artifact
    - name: Publish Artifact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: runner-package-${{ matrix.runtime }}
        path: |
          _package

    - uses: mattermost/action-mattermost-notify@master
      if: ${{ failure() }}
      with:
        MATTERMOST_WEBHOOK_URL: ${{ secrets.MM_WEBHOOK_URL }}
        MATTERMOST_CHANNEL: is-devops-alerts
        TEXT: |
          ${{ github.repository }} build failed.
          [Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) was failed :red_circle:
          ${{ secrets.MM_PING_USERS }}
        MATTERMOST_USERNAME: ${{ github.triggering_actor }}
        MATTERMOST_ICON_URL: https://www.flaticon.com/free-icon/github-logo_25231
