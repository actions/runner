name: Publish Runner Image

on:
  workflow_dispatch:
    inputs:
      runnerVersion:
        type: string
        description: Version of the runner being installed
      imageName:
        type: string
        description: The name of the image

env:
  IMAGE_NAME: github-action-runners/${{ github.event.inputs.imageName }}

jobs:
  build:
    runs-on: windows-2019
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Compute image version
        id: image
        uses: actions/github-script@v6
        env:
          RUNNER_VERSION: ${{ github.event.inputs.runnerVersion }}
        with:
          script: |
            const fs = require('fs');
            const inputRunnerVersion = process.env.RUNNER_VERSION;
            if (inputRunnerVersion) {
              console.log(`Using input runner version ${inputRunnerVersion}`)
              core.setOutput('version', inputRunnerVersion);
              return
            }
            const runnerVersion = fs.readFileSync('${{ github.workspace }}/src/runnerversion', 'utf8').replace(/\n$/g, '')
            console.log(`Using runner version ${runnerVersion}`)
            core.setOutput('version', runnerVersion);

      - name: Log into registry ${{ vars.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build image
        run: docker build -t ${{ vars.REGISTRY }}:${{ env.IMAGE_NAME }} -f images Dockerfile.windows images
